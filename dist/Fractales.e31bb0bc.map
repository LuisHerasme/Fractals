{"version":3,"sources":["Complex.js","index.js"],"names":["Complex","real","imaginary","Re","Im","other","gpu","GPU","c","document","getElementById","addEventListener","Number","value","Fractal","createKernel","r","i","w","h","scale","y","thread","x","temp1","temp2","n","sqrt","pow","color","setOutput","window","innerWidth","innerHeight","setGraphical","canvas","getCanvas","getElementsByTagName","appendChild","counter","setInterval","Math","cos"],"mappings":"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","file":"Fractales.e31bb0bc.map","sourceRoot":"..","sourcesContent":["class Complex {\r\n  constructor(real, imaginary) {\r\n    this.Re = real;\r\n    this.Im = imaginary;\r\n  }\r\n\r\n  add(other) {\r\n    this.Re += other.Re;\r\n    this.Im += other.Im;\r\n  }\r\n\r\n  copy() {\r\n    return new Complex(this.Re, this.Im);\r\n  }\r\n\r\n  square() {\r\n    this.Re = this.Re * this.Re - this.Im * this.Im;\r\n    this.Im = 2 * this.Im * this.Re;\r\n  }\r\n\r\n  getSquare() {\r\n    return new Complex(\r\n      this.Re * this.Re - this.Im * this.Im,\r\n      2 * this.Im * this.Re\r\n    );\r\n  }\r\n}\r\n\r\nexport default Complex;\r\n","import Complex from \"./Complex\";\r\n\r\n/**\r\n *\r\n * TODO\r\n *\r\n * Add to options:\r\n *  Canvas resolution.\r\n *  Colors.\r\n *  N, Iterations\r\n *  N, Infinity\r\n *  Zoom\r\n */\r\n\r\nconst gpu = new GPU();\r\nconst c = new Complex(-1, 0);\r\n\r\ndocument.getElementById(\"cambiar\").addEventListener(\"click\", () => {\r\n  c.Re = Number(document.getElementById(\"real\").value);\r\n  c.Im = Number(document.getElementById(\"im\").value);\r\n});\r\n\r\nconst Fractal = gpu\r\n  .createKernel(function(r, i, w, h, scale) {\r\n    var y = scale * (this.thread.x / w) - scale / 2;\r\n    var x = scale * (this.thread.y / h) - scale / 2;\r\n    var temp1,\r\n      temp2,\r\n      n = 0;\r\n\r\n    while (n < 100) {\r\n      temp1 = x * x - y * y;\r\n      temp2 = 2 * x * y;\r\n\r\n      x = temp1 + i;\r\n      y = temp2 + r;\r\n\r\n      if (sqrt(pow(x, 2) + pow(y, 2)) > 100) break;\r\n      n++;\r\n    }\r\n    n = n / 200;\r\n    this.color(1 - n, 1 - n, 1 - n);\r\n  })\r\n  .setOutput([window.innerWidth, window.innerHeight])\r\n  .setGraphical(true);\r\n\r\nconst canvas = Fractal.getCanvas();\r\ndocument.getElementsByTagName(\"body\")[0].appendChild(canvas);\r\n\r\nlet counter = 0;\r\nsetInterval(() => {\r\n  counter += 0.006;\r\n  c.Im = Math.cos(c.Im + counter);\r\n  c.Re = Math.cos(c.Re + counter);\r\n  Fractal(c.Re, c.Im, window.innerWidth, window.innerHeight, 2);\r\n}, 1000 / 60);\r\n"]}